import java.util.Scanner;

public class ShortestJobFirst {
    /**
     * @return
     */
    @Override
    public int hashCode() {
        return super.hashCode();
    }

    public static void main(String[] args) {
        Scanner sc;
        sc = new Scanner(System.in);
        System.out.println(" number of process:");
        int n = sc.nextInt();
        var pro = new int[n];
        var bt = new int[n];
        var ct = new int[n];
        var ta = new int[n];
        var wt = new int[n];
        var f = new int[n];

        int st = 0, tot = 0;
        float avgwt = 0, avgta = 0;

        int[] at = new int[n];
        for (int i = 0; i < n; i++) {
            System.out.println("enter process " + (i + 1) + " arrival time:");
            at[i] = sc.nextInt();
            System.out.println("enter process " + (i + 1) + " brust time:");
            bt[i] = sc.nextInt();
            pro[i] = i + 1;
            f[i] = 0;
        }


        do {
            int c = n, min = 999999;

            if (tot == n)
                break;

            for (int i = 0; i < n; i++) {

                if ((at[i] <= st) && (f[i] == 0) && (bt[i] < min)) {
                    min = bt[i];
                    c = i;
                }
            }
            if (c == n)
                st++;
            else {
                ct[c] = st + bt[c];
                st += bt[c];
                ta[c] = ct[c] - at[c];
                wt[c] = ta[c] - bt[c];
                f[c] = 1;
                pro[tot] = c + 1;
                tot++;
            }
        } while (true);

        System.out.println("\nproc arrival burst  complete turn waiting");
        for (int i = 0; i < n; i++) {
            avgwt += wt[i];
            avgta += ta[i];
            System.out.println(pro[i] + "\t\t" + at[i] + "\t\t" + bt[i] + "\t\t" + ct[i] + "\t\t" + ta[i] + "\t\t" + wt[i]);
        }
        System.out.println("\naverage tat is " + (avgta / n));
        System.out.println("average wt is " + (avgwt / n));
        sc.close();
        for (int i = 0; i < n; i++) {
            System.out.print(pro[i] + " ");
        }
    }
}

